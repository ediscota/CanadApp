// Mocks generated by Mockito 5.4.6 from annotations
// in canadapp/test/mocks/gestione_certificato_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:io' as _i4;
import 'dart:ui' as _i6;

import 'package:canadapp/ui/viewmodels/gestione_certificato_view_model.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GestioneCertificatoViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockGestioneCertificatoViewModel extends _i1.Mock
    implements _i2.GestioneCertificatoViewModel {
  MockGestioneCertificatoViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  bool get certificatoCaricato =>
      (super.noSuchMethod(
            Invocation.getter(#certificatoCaricato),
            returnValue: false,
          )
          as bool);

  @override
  bool get isValidForm =>
      (super.noSuchMethod(Invocation.getter(#isValidForm), returnValue: false)
          as bool);

  @override
  String get dataScadenzaString =>
      (super.noSuchMethod(
            Invocation.getter(#dataScadenzaString),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#dataScadenzaString),
            ),
          )
          as String);

  @override
  set dataScadenza(String? _dataScadenza) => super.noSuchMethod(
    Invocation.setter(#dataScadenza, _dataScadenza),
    returnValueForMissingStub: null,
  );

  @override
  set fileSelezionato(_i4.File? _fileSelezionato) => super.noSuchMethod(
    Invocation.setter(#fileSelezionato, _fileSelezionato),
    returnValueForMissingStub: null,
  );

  @override
  set isLoading(bool? _isLoading) => super.noSuchMethod(
    Invocation.setter(#isLoading, _isLoading),
    returnValueForMissingStub: null,
  );

  @override
  set certificatoCaricato(bool? _certificatoCaricato) => super.noSuchMethod(
    Invocation.setter(#certificatoCaricato, _certificatoCaricato),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  void setFile(_i4.File? file) => super.noSuchMethod(
    Invocation.method(#setFile, [file]),
    returnValueForMissingStub: null,
  );

  @override
  void setDataScadenza(String? date) => super.noSuchMethod(
    Invocation.method(#setDataScadenza, [date]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> uploadCertificate(String? date) =>
      (super.noSuchMethod(
            Invocation.method(#uploadCertificate, [date]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<String> getCertificatoUrl() =>
      (super.noSuchMethod(
            Invocation.method(#getCertificatoUrl, []),
            returnValue: _i5.Future<String>.value(
              _i3.dummyValue<String>(
                this,
                Invocation.method(#getCertificatoUrl, []),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
