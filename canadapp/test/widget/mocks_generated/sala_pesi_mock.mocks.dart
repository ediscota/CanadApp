// Mocks generated by Mockito 5.4.6 from annotations
// in canadapp/test/mock/sala_pesi_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:canadapp/domain/models/prenotazione.dart' as _i4;
import 'package:canadapp/ui/viewmodels/sala_pesi_view_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SalaPesiViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockSalaPesiViewModel extends _i1.Mock implements _i2.SalaPesiViewModel {
  MockSalaPesiViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<String> get errors =>
      (super.noSuchMethod(Invocation.getter(#errors), returnValue: <String>[])
          as List<String>);

  @override
  String get userId =>
      (super.noSuchMethod(
            Invocation.getter(#userId),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#userId),
            ),
          )
          as String);

  @override
  List<_i4.Prenotazione> get prenotazioni =>
      (super.noSuchMethod(
            Invocation.getter(#prenotazioni),
            returnValue: <_i4.Prenotazione>[],
          )
          as List<_i4.Prenotazione>);

  @override
  bool get isLoading =>
      (super.noSuchMethod(Invocation.getter(#isLoading), returnValue: false)
          as bool);

  @override
  set errors(List<String>? _errors) => super.noSuchMethod(
    Invocation.setter(#errors, _errors),
    returnValueForMissingStub: null,
  );

  @override
  set userId(String? _userId) => super.noSuchMethod(
    Invocation.setter(#userId, _userId),
    returnValueForMissingStub: null,
  );

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  _i5.Future<void> fetchPrenotazioni() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPrenotazioni, []),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  List<_i4.Prenotazione> userPrenotazioni() =>
      (super.noSuchMethod(
            Invocation.method(#userPrenotazioni, []),
            returnValue: <_i4.Prenotazione>[],
          )
          as List<_i4.Prenotazione>);

  @override
  void setDataSelezionata(DateTime? data) => super.noSuchMethod(
    Invocation.method(#setDataSelezionata, [data]),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> aggiungiPrenotazione(String? data, String? ora) =>
      (super.noSuchMethod(
            Invocation.method(#aggiungiPrenotazione, [data, ora]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  void clearErrors() => super.noSuchMethod(
    Invocation.method(#clearErrors, []),
    returnValueForMissingStub: null,
  );

  @override
  _i5.Future<void> eliminaPrenotazione(String? prenotazioneId) =>
      (super.noSuchMethod(
            Invocation.method(#eliminaPrenotazione, [prenotazioneId]),
            returnValue: _i5.Future<void>.value(),
            returnValueForMissingStub: _i5.Future<void>.value(),
          )
          as _i5.Future<void>);

  @override
  _i5.Future<bool> isCertificatoValid() =>
      (super.noSuchMethod(
            Invocation.method(#isCertificatoValid, []),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
