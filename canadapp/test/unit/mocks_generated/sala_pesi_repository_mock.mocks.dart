// Mocks generated by Mockito 5.4.6 from annotations
// in canadapp/test/mock/sala_pesi_repository_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:canadapp/data/repositories/sala_pesi_repository.dart' as _i2;
import 'package:canadapp/domain/models/prenotazione.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SalaPesiRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSalaPesiRepository extends _i1.Mock
    implements _i2.SalaPesiRepository {
  MockSalaPesiRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Prenotazione>> fetchPrenotazioni() =>
      (super.noSuchMethod(
            Invocation.method(#fetchPrenotazioni, []),
            returnValue: _i3.Future<List<_i4.Prenotazione>>.value(
              <_i4.Prenotazione>[],
            ),
          )
          as _i3.Future<List<_i4.Prenotazione>>);

  @override
  _i3.Future<List<String>> aggiungiPrenotazione(String? data, String? ora) =>
      (super.noSuchMethod(
            Invocation.method(#aggiungiPrenotazione, [data, ora]),
            returnValue: _i3.Future<List<String>>.value(<String>[]),
          )
          as _i3.Future<List<String>>);

  @override
  _i3.Future<bool> isOrarioDisponibile(String? data, String? ora) =>
      (super.noSuchMethod(
            Invocation.method(#isOrarioDisponibile, [data, ora]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<void> deletePrenotazione(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deletePrenotazione, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
